{
  "filter_classes": {
    "Item": {
      "description": "Filters for items in inventory, bank, etc.",
      "filter_types": {
        "NAME": {
          "description": "Item name matching (full or partial).",
          "data_type": "string",
          "valid_operators": [
            "DOES_NOT_CONTAIN",
            "CONTAINS",
            "MATCHES_REGEX",
            "IS_IN_LIST",
            "DOES_NOT_EQUAL",
            "EQUALS",
            "NOT_EQUALS",
            "ENDS_WITH",
            "STARTS_WITH"
          ],
          "example_values": [
            "Bones",
            "Dragon bones",
            "Coins",
            "Rune essence"
          ]
        },
        "ID": {
          "description": "Filter items by item ID",
          "data_type": "integer",
          "valid_operators": [
            "GREATER_THAN_EQUALS",
            "LESS_THAN",
            "GREATER_THAN",
            "BETWEEN",
            "EQUALS",
            "IS_IN_LIST",
            "DOES_NOT_EQUAL",
            "NOT_EQUALS",
            "LESS_THAN_EQUALS"
          ],
          "example_values": [
            526,
            532,
            995,
            1436
          ]
        },
        "STACKABLE": {
          "description": "Filter items by stackability",
          "data_type": "boolean",
          "valid_operators": [
            "EQUALS"
          ],
          "example_values": [
            true,
            false
          ]
        },
        "NOTED": {
          "description": "Filter items by noted status",
          "data_type": "boolean",
          "valid_operators": [
            "EQUALS"
          ],
          "example_values": [
            true,
            false
          ]
        },
        "VALUE": {
          "description": "Item GE value (coin value).",
          "data_type": "integer",
          "valid_operators": [
            "GREATER_THAN_EQUALS",
            "…",
            "LESS_THAN",
            "GREATER_THAN",
            "BETWEEN",
            "EQUALS",
            "NOT_EQUALS",
            "LESS_THAN_EQUALS"
          ],
          "example_values": [
            100,
            1000,
            10000
          ]
        },
        "TRADEABLE": {
          "description": "Filter items by tradeability",
          "data_type": "boolean",
          "valid_operators": [
            "EQUALS"
          ],
          "example_values": [
            true,
            false
          ]
        },
        "MEMBER": {
          "description": "Filter items by member-only status",
          "data_type": "boolean",
          "valid_operators": [
            "EQUALS"
          ],
          "example_values": [
            true,
            false
          ]
        },
        "AMOUNT": {
          "operators": [
            "EQUALS",
            "LESS_THAN",
            "GREATER_THAN",
            "LESS_THAN_OR_EQUAL",
            "GREATER_THAN_OR_EQUAL"
          ],
          "value_type": "number",
          "description": "Stack count of the item."
        },
        "HIGH_ALCH_VALUE": {
          "operators": [
            "EQUALS",
            "LESS_THAN",
            "GREATER_THAN",
            "…"
          ],
          "value_type": "number",
          "description": "High alchemy value of the item."
        },
        "LIVE_PRICE": {
          "operators": [
            "EQUALS",
            "LESS_THAN",
            "GREATER_THAN",
            "…"
          ],
          "value_type": "number",
          "description": "Live price from GE (if available)."
        },
        "IS_NOTED": {
          "operators": [
            "EQUALS"
          ],
          "value_type": "boolean (implicit)",
          "description": "True if item is noted. (`IS_NOTED EQUALS` means noted)."
        },
        "IS_NOT_NOTED": {
          "operators": [
            "EQUALS"
          ],
          "value_type": "boolean (implicit)",
          "description": "True if item is unnoted."
        },
        "IS_FOOD": {
          "operators": [
            "EQUALS"
          ],
          "description": "True if the item is recognized as food."
        },
        "IS_TRADEABLE": {
          "operators": [
            "EQUALS"
          ],
          "description": "True if the item is tradeable."
        },
        "IS_STACKABLE": {
          "operators": [
            "EQUALS"
          ],
          "description": "True if the item is stackable."
        },
        "IN_INVENTORY": {
          "operators": [
            "EQUALS"
          ],
          "description": "True if the item is currently in the inventory."
        },
        "IS_VARIABLE_VALUE": {
          "operators": [
            "EQUALS"
          ],
          "description": "True if the item equals the value stored in a given variable (special use)."
        },
        "IS_LAST_OUTPUT": {
          "operators": [
            "EQUALS"
          ],
          "description": "True if the item is the output of the last action (special use)."
        },
        "FILTER_BY_ACTION": {
          "operators": [
            "EQUALS"
          ],
          "description": "Uses the output of another action as the filter criterion."
        }
      }
    },
    "NPC": {
      "description": "Filters for Non-Player Characters (monsters, shopkeepers, etc.).",
      "filter_types": {
        "NAME": {
          "description": "Filter NPCs by name",
          "data_type": "string",
          "valid_operators": [
            "DOES_NOT_CONTAIN",
            "CONTAINS",
            "MATCHES_REGEX",
            "NOT_IN_LIST",
            "IS_IN_LIST",
            "DOES_NOT_EQUAL",
            "EQUALS",
            "NOT_EQUALS",
            "ENDS_WITH",
            "STARTS_WITH"
          ],
          "example_values": [
            "Man",
            "Goblin",
            "Elder Chaos druid",
            "Banker"
          ]
        },
        "ID": {
          "description": "Filter NPCs by ID",
          "data_type": "integer",
          "valid_operators": [
            "GREATER_THAN_EQUALS",
            "LESS_THAN",
            "GREATER_THAN",
            "BETWEEN",
            "EQUALS",
            "IS_IN_LIST",
            "DOES_NOT_EQUAL",
            "NOT_EQUALS",
            "LESS_THAN_EQUALS"
          ],
          "example_values": [
            3080,
            655,
            7995
          ]
        },
        "LEVEL": {
          "description": "Filter NPCs by combat level",
          "data_type": "integer",
          "valid_operators": [
            "GREATER_THAN_EQUALS",
            "...",
            "LESS_THAN",
            "GREATER_THAN",
            "BETWEEN",
            "EQUALS",
            "NOT_EQUALS",
            "LESS_THAN_EQUALS"
          ],
          "example_values": [
            2,
            20,
            80,
            126
          ]
        },
        "INTERACTING_WITH_ME": {
          "description": "Filter NPCs by whether they're interacting with player",
          "data_type": "boolean",
          "valid_operators": [
            "EQUALS"
          ],
          "example_values": [
            true,
            false
          ]
        },
        "INTERACTING": {
          "description": "Filter NPCs by whether they're interacting with any entity",
          "data_type": "boolean",
          "valid_operators": [
            "EQUALS"
          ],
          "example_values": [
            true,
            false
          ]
        },
        "DISTANCE": {
          "description": "Filter NPCs by distance from player",
          "data_type": "integer",
          "valid_operators": [
            "EQUALS",
            "NOT_EQUALS",
            "GREATER_THAN",
            "LESS_THAN",
            "GREATER_THAN_EQUALS",
            "LESS_THAN_EQUALS",
            "BETWEEN"
          ],
          "example_values": [
            1,
            5,
            10,
            20
          ]
        },
        "HEALTH_PERCENTAGE": {
          "description": "Filter NPCs by current health percentage",
          "data_type": "integer",
          "valid_operators": [
            "EQUALS",
            "NOT_EQUALS",
            "GREATER_THAN",
            "LESS_THAN",
            "GREATER_THAN_EQUALS",
            "LESS_THAN_EQUALS",
            "BETWEEN"
          ],
          "example_values": [
            25,
            50,
            75,
            100
          ]
        },
        "IN_COMBAT": {
          "description": "Filter NPCs by combat status",
          "data_type": "boolean",
          "valid_operators": [
            "EQUALS"
          ],
          "example_values": [
            true,
            false
          ]
        },
        "ANIMATION_ID": {
          "description": "Filter NPCs by animation ID",
          "data_type": "integer",
          "valid_operators": [
            "EQUALS",
            "NOT_EQUALS"
          ],
          "example_values": [
            711,
            714,
            4233
          ]
        },
        "ACTION": {
          "operators": [
            "EQUALS",
            "DOES_NOT_EQUAL"
          ],
          "value_type": "text",
          "description": "An available action (option) on the NPC."
        },
        "HEALTH": {
          "operators": [
            "EQUALS",
            "LESS_THAN",
            "GREATER_THAN",
            "..."
          ],
          "value_type": "number",
          "description": "NPC health (hitpoints)."
        },
        "ORIENTATION": {
          "operators": [
            "EQUALS"
          ],
          "value_type": "number",
          "description": "Orientation of NPC (direction they face)."
        },
        "DISTANCE_TO_PLAYER": {
          "operators": [
            "EQUALS",
            "LESS_THAN",
            "GREATER_THAN",
            "..."
          ],
          "value_type": "number",
          "description": "Distance from player."
        },
        "ON_SCREEN": {
          "operators": [
            "EQUALS"
          ],
          "description": "True if NPC is on screen (visible)."
        },
        "NOT_ON_SCREEN": {
          "operators": [
            "EQUALS"
          ],
          "description": "True if NPC is off screen."
        },
        "IS_VARIABLE_VALUE": {
          "operators": [
            "EQUALS"
          ],
          "description": "Matches NPC stored in a variable."
        },
        "FILTER_BY_ACTION": {
          "operators": [
            "EQUALS"
          ],
          "description": "Uses another action’s output (likely an NPC) as filter."
        }
      }
    },
    "GameObject": {
      "description": "Filters for interactive game world objects (doors, trees, bank booths, etc.).",
      "filter_types": {
        "NAME": {
          "description": "Filter game objects by name",
          "data_type": "string",
          "valid_operators": [
            "DOES_NOT_CONTAIN",
            "CONTAINS",
            "MATCHES_REGEX",
            "IS_IN_LIST",
            "DOES_NOT_EQUAL",
            "EQUALS",
            "NOT_EQUALS",
            "ENDS_WITH",
            "STARTS_WITH"
          ],
          "example_values": [
            "Grand Exchange booth",
            "Bank booth",
            "Door",
            "Tree"
          ]
        },
        "ID": {
          "description": "Filter game objects by ID",
          "data_type": "integer",
          "valid_operators": [
            "GREATER_THAN_EQUALS",
            "LESS_THAN",
            "GREATER_THAN",
            "BETWEEN",
            "EQUALS",
            "IS_IN_LIST",
            "DOES_NOT_EQUAL",
            "NOT_EQUALS",
            "LESS_THAN_EQUALS"
          ],
          "example_values": [
            1317,
            24101,
            10355
          ]
        },
        "DISTANCE": {
          "description": "Filter game objects by distance from player",
          "data_type": "integer",
          "valid_operators": [
            "EQUALS",
            "NOT_EQUALS",
            "GREATER_THAN",
            "LESS_THAN",
            "GREATER_THAN_EQUALS",
            "LESS_THAN_EQUALS",
            "BETWEEN"
          ],
          "example_values": [
            1,
            5,
            10,
            20
          ]
        },
        "ACTION": {
          "description": "Available right-click action on the object (e.g., 'Open', 'Chop down').",
          "data_type": "string",
          "valid_operators": [
            "CONTAINS",
            "MATCHES_REGEX",
            "IS_IN_LIST",
            "DOES_NOT_EQUAL",
            "EQUALS",
            "NOT_EQUALS",
            "ENDS_WITH",
            "STARTS_WITH"
          ],
          "example_values": [
            "Open",
            "Close",
            "Use",
            "Search",
            "Climb"
          ]
        },
        "TYPE": {
          "description": "Filter game objects by type ID",
          "data_type": "integer",
          "valid_operators": [
            "EQUALS",
            "NOT_EQUALS"
          ],
          "example_values": [
            0,
            1,
            2,
            3,
            4,
            5
          ]
        },
        "MODEL_ID": {
          "description": "Filter game objects by model ID",
          "data_type": "integer",
          "valid_operators": [
            "EQUALS",
            "NOT_EQUALS"
          ],
          "example_values": [
            4123,
            5672,
            8901
          ]
        },
        "MODEL_COLORS": {
          "operators": [
            "EQUALS"
          ],
          "value_type": "text/number",
          "description": "Color or texture of the model (if applicable)."
        },
        "ORIENTATION": {
          "operators": [
            "EQUALS"
          ],
          "value_type": "number",
          "description": "Orientation (rotation) of the object (0-2047)."
        },
        "DISTANCE_TO_PLAYER": {
          "operators": [
            "EQUALS",
            "LESS_THAN",
            "GREATER_THAN",
            "..."
          ],
          "value_type": "number",
          "description": "Distance from player."
        },
        "IS_REACHABLE": {
          "operators": [
            "EQUALS"
          ],
          "description": "True if the object can be reached by walking."
        },
        "IS_NOT_REACHABLE": {
          "operators": [
            "EQUALS"
          ],
          "description": "True if not reachable."
        },
        "TILE": {
          "operators": [
            "EQUALS"
          ],
          "value_type": "Tile",
          "description": "Specific world tile the object occupies (coordinate match)."
        },
        "IN_AREA": {
          "operators": [
            "EQUALS"
          ],
          "value_type": "Area",
          "description": "Object is within a defined area."
        },
        "ON_SCREEN": {
          "operators": [
            "EQUALS"
          ],
          "description": "True if object is visible on screen."
        },
        "NOT_ON_SCREEN": {
          "operators": [
            "EQUALS"
          ],
          "description": "True if object is not visible."
        },
        "HAS_NAME": {
          "operators": [
            "EQUALS"
          ],
          "description": "True if object has a name (some objects might be unnamed)."
        },
        "INDEX": {
          "operators": [
            "EQUALS"
          ],
          "value_type": "number",
          "description": "Internal index of the object in scene (rarely used)."
        },
        "IS_VARIABLE_VALUE": {
          "operators": [
            "EQUALS"
          ],
          "description": "Matches an object stored in a variable."
        },
        "FILTER_BY_ACTION": {
          "operators": [
            "EQUALS"
          ],
          "description": "Uses last action output or given action’s output to filter."
        }
      }
    },
    "GroundItem": {
      "description": "Filters for items on the ground (loot).",
      "filter_types": {
        "NAME": {
          "description": "Filter ground items by name",
          "data_type": "string",
          "valid_operators": [
            "DOES_NOT_CONTAIN",
            "CONTAINS",
            "MATCHES_REGEX",
            "IS_IN_LIST",
            "DOES_NOT_EQUAL",
            "EQUALS",
            "NOT_EQUALS",
            "ENDS_WITH",
            "STARTS_WITH"
          ],
          "example_values": [
            "Bones",
            "Dragon bones",
            "Coins",
            "Rune essence"
          ]
        },
        "ID": {
          "description": "Filter ground items by ID",
          "data_type": "integer",
          "valid_operators": [
            "GREATER_THAN_EQUALS",
            "LESS_THAN",
            "GREATER_THAN",
            "BETWEEN",
            "EQUALS",
            "IS_IN_LIST",
            "DOES_NOT_EQUAL",
            "NOT_EQUALS",
            "LESS_THAN_EQUALS"
          ],
          "example_values": [
            526,
            532,
            995,
            1436
          ]
        },
        "DISTANCE": {
          "description": "Filter ground items by distance from player",
          "data_type": "integer",
          "valid_operators": [
            "EQUALS",
            "NOT_EQUALS",
            "GREATER_THAN",
            "LESS_THAN",
            "GREATER_THAN_EQUALS",
            "LESS_THAN_EQUALS",
            "BETWEEN"
          ],
          "example_values": [
            1,
            5,
            10,
            20
          ]
        },
        "STACKSIZE": {
          "description": "Filter ground items by stack size",
          "data_type": "integer",
          "valid_operators": [
            "EQUALS",
            "NOT_EQUALS",
            "GREATER_THAN",
            "LESS_THAN",
            "GREATER_THAN_EQUALS",
            "LESS_THAN_EQUALS",
            "BETWEEN"
          ],
          "example_values": [
            1,
            10,
            100,
            1000
          ]
        },
        "VALUE": {
          "description": "Filter ground items by GE value",
          "data_type": "integer",
          "valid_operators": [
            "GREATER_THAN_EQUALS",
            "...",
            "LESS_THAN",
            "GREATER_THAN",
            "BETWEEN",
            "EQUALS",
            "NOT_EQUALS",
            "LESS_THAN_EQUALS"
          ],
          "example_values": [
            100,
            1000,
            10000
          ]
        },
        "AMOUNT": {
          "operators": [
            "EQUALS",
            "LESS_THAN",
            "GREATER_THAN",
            "..."
          ],
          "value_type": "number",
          "description": "Quantity of the ground item stack."
        },
        "DISTANCE_TO_PLAYER": {
          "operators": [
            "EQUALS",
            "LESS_THAN",
            "GREATER_THAN",
            "..."
          ],
          "value_type": "number",
          "description": "Straight-line distance from local player."
        },
        "WALKING_DISTANCE_TO_PLAYER": {
          "operators": [
            "EQUALS",
            "LESS_THAN",
            "GREATER_THAN",
            "..."
          ],
          "value_type": "number",
          "description": "Path distance (walking steps) from player."
        },
        "IS_REACHABLE": {
          "operators": [
            "EQUALS"
          ],
          "description": "True if the item can be reached (no obstacles)."
        },
        "IS_NOT_REACHABLE": {
          "operators": [
            "EQUALS"
          ],
          "description": "True if the item is not reachable."
        },
        "IS_OUR_LOOT": {
          "operators": [
            "EQUALS"
          ],
          "description": "True if the item was dropped by our player."
        },
        "IN_AREA": {
          "operators": [
            "EQUALS"
          ],
          "value_type": "Area",
          "description": "True if the item’s tile is within a specified area."
        },
        "ON_SCREEN": {
          "operators": [
            "EQUALS"
          ],
          "description": "True if the item is currently on the screen (visible)."
        },
        "NOT_ON_SCREEN": {
          "operators": [
            "EQUALS"
          ],
          "description": "True if the item is not visible on screen."
        },
        "IS_VARIABLE_VALUE": {
          "operators": [
            "EQUALS"
          ],
          "description": "Matches an item stored in a variable."
        },
        "FILTER_BY_ACTION": {
          "operators": [
            "EQUALS"
          ],
          "description": "Uses another action’s output as filter."
        }
      }
    },
    "Player": {
      "description": "Filters for player entities (could be local or other players).",
      "filter_types": {
        "NAME": {
          "description": "Filter players by name",
          "data_type": "string",
          "valid_operators": [
            "DOES_NOT_CONTAIN",
            "CONTAINS",
            "MATCHES_REGEX",
            "NOT_IN_LIST",
            "DOES_NOT_EQUAL",
            "IS_IN_LIST",
            "EQUALS",
            "NOT_EQUALS",
            "ENDS_WITH",
            "STARTS_WITH"
          ],
          "example_values": [
            "Zezima",
            "PlayerName123"
          ]
        },
        "LEVEL": {
          "description": "Filter players by combat level",
          "data_type": "integer",
          "valid_operators": [
            "GREATER_THAN_EQUALS",
            "...",
            "LESS_THAN",
            "GREATER_THAN",
            "BETWEEN",
            "EQUALS",
            "NOT_EQUALS",
            "LESS_THAN_EQUALS"
          ],
          "example_values": [
            3,
            70,
            99,
            126
          ]
        },
        "DISTANCE": {
          "description": "Filter players by distance from local player",
          "data_type": "integer",
          "valid_operators": [
            "EQUALS",
            "NOT_EQUALS",
            "GREATER_THAN",
            "LESS_THAN",
            "GREATER_THAN_EQUALS",
            "LESS_THAN_EQUALS",
            "BETWEEN"
          ],
          "example_values": [
            1,
            5,
            10,
            20
          ]
        },
        "INTERACTING_WITH_ME": {
          "description": "Filter players by whether they're interacting with local player",
          "data_type": "boolean",
          "valid_operators": [
            "EQUALS"
          ],
          "example_values": [
            true,
            false
          ]
        },
        "SKULL_ICON": {
          "description": "Filter players by skull icon",
          "data_type": "integer",
          "valid_operators": [
            "EQUALS",
            "NOT_EQUALS"
          ],
          "example_values": [
            0,
            1
          ]
        },
        "IN_COMBAT": {
          "description": "True if the player is in combat.",
          "data_type": "boolean",
          "valid_operators": [
            "EQUALS"
          ],
          "example_values": [
            true,
            false
          ]
        },
        "IS_MOVING": {
          "description": "Filter players by movement status",
          "data_type": "boolean",
          "valid_operators": [
            "EQUALS"
          ],
          "example_values": [
            true,
            false
          ]
        },
        "ANIMATION_ID": {
          "description": "Filter players by animation ID",
          "data_type": "integer",
          "valid_operators": [
            "EQUALS",
            "NOT_EQUALS"
          ],
          "example_values": [
            711,
            714,
            4233
          ]
        },
        "ACTION": {
          "operators": [
            "EQUALS",
            "DOES_NOT_EQUAL"
          ],
          "value_type": "text",
          "description": "Action the player is doing (e.g., 'Attack', 'Trade')."
        },
        "HEALTH": {
          "operators": [
            "EQUALS",
            "LESS_THAN",
            "GREATER_THAN",
            "..."
          ],
          "value_type": "number",
          "description": "Current health of player."
        },
        "DISTANCE_TO_PLAYER": {
          "operators": [
            "EQUALS",
            "LESS_THAN",
            "GREATER_THAN",
            "..."
          ],
          "value_type": "number",
          "description": "Distance to our player (for other players)."
        },
        "WALKING_DISTANCE_TO_PLAYER": {
          "operators": [
            "EQUALS",
            "LESS_THAN",
            "GREATER_THAN",
            "..."
          ],
          "value_type": "number",
          "description": "Path distance from our player."
        },
        "IS_REACHABLE": {
          "operators": [
            "EQUALS"
          ],
          "description": "True if reachable (no obstacles)."
        },
        "TILE": {
          "operators": [
            "EQUALS"
          ],
          "value_type": "Tile",
          "description": "Player’s current tile equals given tile."
        },
        "IN_AREA": {
          "operators": [
            "EQUALS"
          ],
          "value_type": "Area",
          "description": "Player is inside a given area."
        },
        "ON_SCREEN": {
          "operators": [
            "EQUALS"
          ],
          "description": "Player is on screen."
        },
        "NOT_ON_SCREEN": {
          "operators": [
            "EQUALS"
          ],
          "description": "Player is off screen."
        },
        "ANIMATION": {
          "operators": [
            "EQUALS"
          ],
          "value_type": "number",
          "description": "Animation ID the player is performing."
        },
        "ANIMATING": {
          "operators": [
            "EQUALS"
          ],
          "description": "True if player is currently animating (any animation in progress)."
        },
        "NOT_ANIMATING": {
          "operators": [
            "EQUALS"
          ],
          "description": "True if player is idle (no animation)."
        },
        "CAN_ATTACK_ME": {
          "operators": [
            "EQUALS"
          ],
          "description": "True if the player can attack our player (wilderness level etc.)."
        },
        "MOVING": {
          "operators": [
            "EQUALS"
          ],
          "description": "True if the player is currently moving."
        },
        "NOT_MOVING": {
          "operators": [
            "EQUALS"
          ],
          "description": "True if the player is stationary."
        },
        "IS_ATTACKABLE": {
          "operators": [
            "EQUALS"
          ],
          "description": "True if our player can attack this player (PvP conditions)."
        },
        "WE_ARE_INTERACTING": {
          "operators": [
            "EQUALS"
          ],
          "description": "True if our player is interacting with this player."
        },
        "IS_INTERACTING": {
          "operators": [
            "EQUALS"
          ],
          "description": "True if this player is interacting with someone/something."
        },
        "IS_INTERACTING_WITH_ME": {
          "operators": [
            "EQUALS"
          ],
          "description": "True if this player is interacting with our player."
        },
        "IS_LAST_OUTPUT": {
          "operators": [
            "EQUALS"
          ],
          "description": "Matches the last output if it was a Player."
        },
        "INDEX": {
          "operators": [
            "EQUALS"
          ],
          "value_type": "number",
          "description": "Internal index for the player entity."
        },
        "FILTER_BY_ACTION": {
          "operators": [
            "EQUALS"
          ],
          "description": "Uses another action’s output as a player filter."
        }
      }
    },
    "Widget": {
      "description": "Filters for UI widgets (interface components).",
      "filter_types": {
        "ID": {
          "description": "Filter widgets by parent ID",
          "data_type": "integer",
          "valid_operators": [
            "EQUALS"
          ],
          "example_values": [
            548,
            161,
            162
          ]
        },
        "CHILD_ID": {
          "description": "Filter widgets by child ID",
          "data_type": "integer",
          "valid_operators": [
            "EQUALS"
          ],
          "example_values": [
            1,
            2,
            3,
            4
          ]
        },
        "TEXT": {
          "description": "Filter widgets by text content",
          "data_type": "string",
          "valid_operators": [
            "DOES_NOT_CONTAIN",
            "CONTAINS",
            "MATCHES_REGEX",
            "EQUALS",
            "NOT_EQUALS",
            "ENDS_WITH",
            "STARTS_WITH"
          ],
          "example_values": [
            "Click here to continue",
            "Trade",
            "Close"
          ]
        },
        "VISIBLE": {
          "description": "Filter widgets by visibility",
          "data_type": "boolean",
          "valid_operators": [
            "EQUALS"
          ],
          "example_values": [
            true,
            false
          ]
        },
        "WIDGET_ID": {
          "operators": [
            "EQUALS"
          ],
          "value_type": "number",
          "description": "The widget’s unique ID."
        },
        "ACTION": {
          "operators": [
            "EQUALS",
            "CONTAINS"
          ],
          "value_type": "text",
          "description": "Action name of the widget (if it’s a button, etc.)."
        },
        "IS_VISIBLE": {
          "operators": [
            "EQUALS"
          ],
          "description": "True if widget is visible."
        },
        "IS_HIDDEN": {
          "operators": [
            "EQUALS"
          ],
          "description": "True if widget is hidden."
        },
        "ENABLED_MEDIA_ID": {
          "operators": [
            "EQUALS"
          ],
          "value_type": "number",
          "description": "Media (sprite) ID when enabled."
        },
        "DISABLED_MEDIA_ID": {
          "operators": [
            "EQUALS"
          ],
          "value_type": "number",
          "description": "Media ID when disabled."
        },
        "WIDGET_ITEM_ID": {
          "operators": [
            "EQUALS"
          ],
          "value_type": "number",
          "description": "If widget represents an item slot, the item ID present."
        },
        "WIDGET_ITEM_AMOUNT": {
          "operators": [
            "EQUALS",
            "LESS_THAN",
            "GREATER_THAN"
          ],
          "value_type": "number",
          "description": "If widget has an item, the quantity."
        },
        "TEXT_COLOR": {
          "operators": [
            "EQUALS"
          ],
          "value_type": "number",
          "description": "Color of the widget’s text (as int)."
        },
        "IS_VARIABLE_VALUE": {
          "operators": [
            "EQUALS"
          ],
          "description": "True if this widget equals a stored variable’s widget."
        },
        "FILTER_BY_ACTION": {
          "operators": [
            "EQUALS"
          ],
          "description": "Uses another action’s output (widget) as filter."
        }
      }
    },
    "Number": {
      "description": "Filters for numeric values",
      "filter_types": {
        "VALUE": {
          "description": "Filter by numeric value",
          "data_type": "integer",
          "valid_operators": [
            "EQUALS",
            "NOT_EQUALS",
            "GREATER_THAN",
            "LESS_THAN",
            "GREATER_THAN_EQUALS",
            "LESS_THAN_EQUALS",
            "BETWEEN",
            "IS_EVEN",
            "IS_ODD",
            "IS_MULTIPLE_OF"
          ],
          "example_values": [
            0,
            1,
            10,
            50,
            100
          ]
        }
      }
    },
    "Time": {
      "description": "Filters for time values",
      "filter_types": {
        "VALUE": {
          "description": "Filter by time value",
          "data_type": "long",
          "valid_operators": [
            "EQUALS",
            "NOT_EQUALS",
            "GREATER_THAN",
            "LESS_THAN",
            "GREATER_THAN_EQUALS",
            "LESS_THAN_EQUALS",
            "BETWEEN"
          ],
          "example_values": [
            1000,
            60000,
            3600000
          ]
        }
      }
    },
    "String": {
      "description": "Filters for string values",
      "filter_types": {
        "VALUE": {
          "description": "Filter by string value",
          "data_type": "string",
          "valid_operators": [
            "EQUALS",
            "NOT_EQUALS",
            "CONTAINS",
            "STARTS_WITH",
            "ENDS_WITH",
            "MATCHES_REGEX",
            "IS_IN_LIST",
            "LENGTH_EQUALS",
            "LENGTH_GREATER_THAN",
            "LENGTH_LESS_THAN"
          ],
          "example_values": [
            "test",
            "hello",
            "value"
          ]
        }
      }
    },
    "Projectile": {
      "class_description": "Filters for projectiles (arrows, spells in flight).",
      "filter_types": {
        "ID": {
          "operators": [
            "EQUALS",
            "DOES_NOT_EQUAL"
          ],
          "value_type": "number",
          "description": "Projectile ID (spell or ammo ID)."
        },
        "DISTANCE_TO_PLAYER": {
          "operators": [
            "EQUALS",
            "LESS_THAN",
            "GREATER_THAN"
          ],
          "value_type": "number",
          "description": "Distance of projectile from player."
        },
        "IS_REACHABLE": {
          "operators": [
            "EQUALS"
          ],
          "description": "If applicable, whether projectile's path is clear (rarely used)."
        },
        "TILE": {
          "operators": [
            "EQUALS"
          ],
          "value_type": "Tile",
          "description": "Projectile’s current tile."
        },
        "IN_AREA": {
          "operators": [
            "EQUALS"
          ],
          "value_type": "Area",
          "description": "Projectile is within area."
        },
        "IS_VARIABLE_VALUE": {
          "operators": [
            "EQUALS"
          ],
          "description": "Matches projectile stored in variable."
        },
        "IS_LAST_OUTPUT": {
          "operators": [
            "EQUALS"
          ],
          "description": "Matches last action output if projectile."
        },
        "FILTER_BY_ACTION": {
          "operators": [
            "EQUALS"
          ],
          "description": "Linked to another action’s output."
        }
      },
      "description": "Filters for projectiles (arrows, spells in flight)."
    },
    "GraphicsObject": {
      "class_description": "Filters for graphics objects (animated effects on ground, e.g., spawned by spells).",
      "filter_types": {
        "ID": {
          "operators": [
            "EQUALS",
            "DOES_NOT_EQUAL"
          ],
          "value_type": "number",
          "description": "Graphics object ID."
        },
        "SPAWN_TIME": {
          "operators": [
            "EQUALS",
            "LESS_THAN",
            "GREATER_THAN",
            "..."
          ],
          "value_type": "number",
          "description": "Time since spawn (ms)."
        },
        "DISTANCE_TO_PLAYER": {
          "operators": [
            "EQUALS",
            "LESS_THAN",
            "GREATER_THAN",
            "..."
          ],
          "value_type": "number",
          "description": "Distance from player."
        },
        "IS_REACHABLE": {
          "operators": [
            "EQUALS"
          ],
          "description": "Reachable by player or not."
        },
        "TILE": {
          "operators": [
            "EQUALS"
          ],
          "value_type": "Tile",
          "description": "Tile where the graphics object is."
        },
        "IN_AREA": {
          "operators": [
            "EQUALS"
          ],
          "value_type": "Area",
          "description": "Within given area."
        },
        "IS_VARIABLE_VALUE": {
          "operators": [
            "EQUALS"
          ],
          "description": "Matches a graphics object stored in a variable."
        },
        "FILTER_BY_ACTION": {
          "operators": [
            "EQUALS"
          ],
          "description": "Matches another action’s output."
        }
      },
      "description": "Filters for graphics objects (animated effects on ground, e.g., spawned by spells)."
    },
    "World": {
      "class_description": "Filters for game worlds (for world hopping or checks).",
      "filter_types": {
        "ID": {
          "operators": [
            "EQUALS",
            "DOES_NOT_EQUAL",
            "IS_IN_LIST",
            "NOT_IN_LIST"
          ],
          "value_type": "number",
          "description": "World number (e.g., 301)."
        },
        "WORLD_IS_MEMBERS": {
          "operators": [
            "EQUALS"
          ],
          "description": "True if world is members-only."
        },
        "WORLD_IS_F2P": {
          "operators": [
            "EQUALS"
          ],
          "description": "True if world is free-to-play."
        },
        "WORLD_IS_PVP": {
          "operators": [
            "EQUALS"
          ],
          "description": "True if world is a PvP world."
        },
        "WORLD_IS_BOUNTY_HUNTER": {
          "operators": [
            "EQUALS"
          ],
          "description": "True if world is a Bounty Hunter world."
        },
        "WORLD_IS_NORMAL": {
          "operators": [
            "EQUALS"
          ],
          "description": "True if world is a normal (non-special) world."
        },
        "WORLD_LOCATION": {
          "operators": [
            "EQUALS"
          ],
          "value_type": "ZoneId/Region",
          "description": "Geographic location of world (e.g., USA, EU)."
        },
        "WORLD_POPULATION": {
          "operators": [
            "LESS_THAN",
            "GREATER_THAN",
            "EQUALS"
          ],
          "value_type": "number",
          "description": "Number of players in world."
        },
        "WORLD_PING": {
          "operators": [
            "LESS_THAN",
            "EQUALS",
            "GREATER_THAN"
          ],
          "value_type": "number",
          "description": "Ping to world (ms)."
        },
        "FILTER_BY_ACTION": {
          "operators": [
            "EQUALS"
          ],
          "description": "Takes a world from another action’s output as filter."
        }
      },
      "description": "Filters for game worlds (for world hopping or checks)."
    },
    "Variable": {
      "class_description": "Filters for variable values (for use in conditions).",
      "filter_types": {
        "AS_TEXT": {
          "operators": [
            "EQUALS",
            "DOES_NOT_EQUAL",
            "CONTAINS",
            "DOES_NOT_CONTAIN",
            "STARTS_WITH",
            "ENDS_WITH",
            "IS_IN_LIST",
            "NOT_IN_LIST"
          ],
          "value_type": "text",
          "description": "Interprets the variable’s value as text and applies text comparison."
        },
        "AS_NUMBER": {
          "operators": [
            "EQUALS",
            "DOES_NOT_EQUAL",
            "LESS_THAN",
            "LESS_THAN_OR_EQUAL",
            "GREATER_THAN",
            "GREATER_THAN_OR_EQUAL",
            "CONTAINS",
            "DOES_NOT_CONTAIN"
          ],
          "value_type": "number",
          "description": "Interprets the variable’s value as a number for numeric comparisons."
        },
        "AS_BOOLEAN": {
          "operators": [
            "IS_TRUE",
            "IS_FALSE"
          ],
          "description": "Checks a variable’s boolean value (true/false)."
        },
        "FILTER_BY_ACTION": {
          "operators": [
            "EQUALS"
          ],
          "description": "Compares the variable to another action’s output."
        }
      },
      "description": "Filters for variable values (for use in conditions)."
    }
  },
  "logical_operators": {
    "AND": {
      "description": "Logical AND - all conditions must be true",
      "usage": "Use when multiple filter conditions must ALL be satisfied",
      "example": {
        "class": "Item",
        "logic": "AND",
        "conditions": [
          {
            "type": "NAME",
            "operator": "CONTAINS",
            "value": "rune"
          },
          {
            "type": "VALUE",
            "operator": "GREATER_THAN",
            "value": "1000"
          }
        ]
      }
    },
    "OR": {
      "description": "Logical OR - at least one condition must be true",
      "usage": "Use when ANY of multiple filter conditions can be satisfied",
      "example": {
        "class": "NPC",
        "logic": "OR",
        "conditions": [
          {
            "type": "NAME",
            "operator": "EQUALS",
            "value": "Goblin"
          },
          {
            "type": "NAME",
            "operator": "EQUALS",
            "value": "Rat"
          }
        ]
      }
    },
    "NONE": {
      "description": "No logical operator - single condition",
      "usage": "Use when only one filter condition is needed",
      "example": {
        "class": "Item",
        "logic": "NONE",
        "type": "NAME",
        "operator": "EQUALS",
        "value": "Bones"
      }
    }
  },
  "operator_mapping": {
    "string_operators": {
      "EQUALS": {
        "java_expression": "value.equals(\"{0}\")",
        "description": "Exact match of strings"
      },
      "NOT_EQUALS": {
        "java_expression": "!value.equals(\"{0}\")",
        "description": "String values do not match exactly"
      },
      "CONTAINS": {
        "java_expression": "value.contains(\"{0}\")",
        "description": "String contains the substring"
      },
      "STARTS_WITH": {
        "java_expression": "value.startsWith(\"{0}\")",
        "description": "String starts with the substring"
      },
      "ENDS_WITH": {
        "java_expression": "value.endsWith(\"{0}\")",
        "description": "String ends with the substring"
      },
      "MATCHES_REGEX": {
        "java_expression": "value.matches(\"{0}\")",
        "description": "String matches the regular expression pattern"
      },
      "IS_IN_LIST": {
        "java_expression": "lists.get(\"{0}\").contains(value)",
        "description": "String is in the specified list"
      },
      "LENGTH_EQUALS": {
        "java_expression": "value.length() == {0}",
        "description": "String length equals the value"
      },
      "LENGTH_GREATER_THAN": {
        "java_expression": "value.length() > {0}",
        "description": "String length is greater than the value"
      },
      "LENGTH_LESS_THAN": {
        "java_expression": "value.length() < {0}",
        "description": "String length is less than the value"
      }
    },
    "numeric_operators": {
      "EQUALS": {
        "java_expression": "value == {0}",
        "description": "Numeric values are exactly equal"
      },
      "NOT_EQUALS": {
        "java_expression": "value != {0}",
        "description": "Numeric values are not equal"
      },
      "GREATER_THAN": {
        "java_expression": "value > {0}",
        "description": "Value is greater than the specified number"
      },
      "LESS_THAN": {
        "java_expression": "value < {0}",
        "description": "Value is less than the specified number"
      },
      "GREATER_THAN_EQUALS": {
        "java_expression": "value >= {0}",
        "description": "Value is greater than or equal to the specified number"
      },
      "LESS_THAN_EQUALS": {
        "java_expression": "value <= {0}",
        "description": "Value is less than or equal to the specified number"
      },
      "BETWEEN": {
        "java_expression": "value >= {0} && value <= {1}",
        "description": "Value is between the two specified numbers (inclusive)"
      },
      "IS_EVEN": {
        "java_expression": "value % 2 == 0",
        "description": "Value is an even number"
      },
      "IS_ODD": {
        "java_expression": "value % 2 != 0",
        "description": "Value is an odd number"
      },
      "IS_MULTIPLE_OF": {
        "java_expression": "value % {0} == 0",
        "description": "Value is a multiple of the specified number"
      },
      "IS_IN_LIST": {
        "java_expression": "lists.get(\"{0}\").contains(value)",
        "description": "Numeric value is in the specified list"
      }
    },
    "boolean_operators": {
      "EQUALS": {
        "java_expression": "value == {0}",
        "description": "Boolean value matches the specified value (true/false)"
      }
    }
  },
  "examples": [
    {
      "description": "Find a Goblin NPC that is alive and on screen",
      "filter": {
        "class": "NPC",
        "logic": "NONE",
        "type": "NAME",
        "operator": "EQUALS",
        "value": "Goblin",
        "filters": [
          {
            "class": "NPC",
            "logic": "AND",
            "type": "HEALTH",
            "operator": "GREATER_THAN",
            "value": 0
          },
          {
            "class": "NPC",
            "logic": "AND",
            "type": "ON_SCREEN",
            "operator": "EQUALS"
          }
        ]
      }
    },
    {
      "description": "Find any oak or willow tree (Game Object) within 10 tiles",
      "filter": {
        "class": "GameObject",
        "logic": "NONE",
        "type": "NAME",
        "operator": "EQUALS",
        "value": "Oak",
        "filters": [
          {
            "class": "GameObject",
            "logic": "OR",
            "type": "NAME",
            "operator": "EQUALS",
            "value": "Willow"
          },
          {
            "class": "GameObject",
            "logic": "AND",
            "type": "DISTANCE_TO_PLAYER",
            "operator": "LESS_THAN_OR_EQUAL",
            "value": 10
          }
        ]
      }
    },
    {
      "description": "Filter inventory items that contain 'potion' in name and are tradeable",
      "filter": {
        "class": "Item",
        "logic": "NONE",
        "type": "NAME",
        "operator": "CONTAINS",
        "value": "potion",
        "filters": [
          {
            "class": "Item",
            "logic": "AND",
            "type": "IS_TRADEABLE",
            "operator": "EQUALS"
          }
        ]
      }
    },
    {
      "description": "Select world with ID 302 or 303 that is a members world",
      "filter": {
        "class": "World",
        "logic": "NONE",
        "type": "ID",
        "operator": "IS_IN_LIST",
        "value": [
          302,
          303
        ],
        "filters": [
          {
            "class": "World",
            "logic": "AND",
            "type": "WORLD_IS_MEMBERS",
            "operator": "EQUALS"
          }
        ]
      }
    }
  ],
  "combining_filters": "You can chain multiple filters with AND/OR logic. The first filter in a chain uses 'NONE' (no preceding logic). Subsequent filters can use AND or OR to refine or broaden the criteria. PSC evaluates them left-to-right. Parentheses are not explicitly used; order of filters and use of OR/AND determines grouping (OR has lower precedence effectively).",
  "metadata": {
    "version": "2.0",
    "description": "Comprehensive filter types library merged from filter_types_library.json and types_operators.json",
    "merge_date": "2025-03-09",
    "source_files": [
      "filter_types_library.json",
      "types_operators.json"
    ]
  }
}