{
  "name": "MouseEvent",
  "full_name": "org.dreambot.api.input.event.impl.mouse.MouseEvent",
  "full_url": "https://dreambot.org/javadocs/org/dreambot/api/input/event/impl/mouse/MouseEvent.html",
  "type": "class",
  "package": "org.dreambot.api.input.event.impl.mouse",
  "description": "Mouse event that handles the full movement and click process based on the fields you pass in. You can use whatever implementation of AbstractMouseDestination that you need. These examples use PointDestination Examples: To just move the mouse with no clicks, you would use MouseEvent<PointDestination> event = new MouseEvent<>(new PointDestination(100, 300), MouseMode.NONE, MouseButton.NULL); event.run(); In order to drag with the left mouse button you'd use: MouseEvent<PointDestination> event = new MouseEvent<>(new PointDestination(100, 300), MouseMode.DRAG, MouseButton.LEFT_CLICK); event.run(); The middle mouse button is the same but with MouseButton.MIDDLE_CLICK In order to click at your current position you can either use new PointDestination(Mouse.getPosition()) or you can pass in a null destination. This example will call MouseAlgorithm.handleClick(MouseButton) with the supplied mouse button (left click in this case) MouseEvent<PointDestination> event = new MouseEvent<>(null, MouseMode.FULL_CLICK, MouseButton.LEFT_CLICK); event.run();",
  "page_structure": {
    "type": "class",
    "format_version": "old",
    "has_summary_tables": true,
    "has_detail_sections": true,
    "has_nested_classes": false
  },
  "inheritance": [
    "org.dreambot.api.input.event.AbstractEvent",
    "org.dreambot.api.input.event.impl.mouse.type.AbstractMouseEvent"
  ],
  "interfaces_implemented": [],
  "nested_classes": [],
  "methods": [
    {
      "name": "Condition",
      "return_type": "",
      "modifiers": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "T",
      "return_type": "",
      "modifiers": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "MouseButton",
      "return_type": "",
      "modifiers": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "MouseMode",
      "return_type": "",
      "modifiers": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "WheelMode",
      "return_type": "",
      "modifiers": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "run",
      "signature": "public final void run()",
      "return_type": "",
      "modifiers": [],
      "description": "Runs the event. During MouseMode.DRAG we automatically add in the press and release events for your supplied button. You can use Mouse.isMouseDragging() to determine if the mouse is currently being dragged in your MouseAlgorithm.handleMovement(AbstractMouseDestination)",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "completed",
      "signature": "public Condition completed()",
      "return_type": "",
      "modifiers": [],
      "description": "Abstract Condition used to determine if current event is complete.",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "failed",
      "signature": "public Condition failed()",
      "return_type": "",
      "modifiers": [],
      "description": "Abstract Condition used to determine if current event has failed.",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "isCompleted",
      "signature": "public boolean isCompleted()",
      "return_type": "",
      "modifiers": [],
      "description": "",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "isFailed",
      "signature": "public boolean isFailed()",
      "return_type": "",
      "modifiers": [],
      "description": "",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getDestination",
      "signature": "public T getDestination()",
      "return_type": "",
      "modifiers": [],
      "description": "",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getMouseMode",
      "signature": "public MouseMode getMouseMode()",
      "return_type": "",
      "modifiers": [],
      "description": "",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getMouseButton",
      "signature": "public MouseButton getMouseButton()",
      "return_type": "",
      "modifiers": [],
      "description": "",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getWheelMode",
      "signature": "public WheelMode getWheelMode()",
      "return_type": "",
      "modifiers": [],
      "description": "",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getWheelCondition",
      "signature": "public Condition getWheelCondition()",
      "return_type": "",
      "modifiers": [],
      "description": "",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getTimeout",
      "signature": "public long getTimeout()",
      "return_type": "",
      "modifiers": [],
      "description": "",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "setCompleted",
      "signature": "public void setCompleted\u200b(boolean completed)",
      "return_type": "",
      "modifiers": [],
      "description": "",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "setFailed",
      "signature": "public void setFailed\u200b(boolean failed)",
      "return_type": "",
      "modifiers": [],
      "description": "",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "setDestination",
      "signature": "public void setDestination\u200b(T destination)",
      "return_type": "",
      "modifiers": [],
      "description": "",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "setMouseMode",
      "signature": "public void setMouseMode\u200b(MouseMode mouseMode)",
      "return_type": "",
      "modifiers": [],
      "description": "",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "setMouseButton",
      "signature": "public void setMouseButton\u200b(MouseButton mouseButton)",
      "return_type": "",
      "modifiers": [],
      "description": "",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "setWheelMode",
      "signature": "public void setWheelMode\u200b(WheelMode wheelMode)",
      "return_type": "",
      "modifiers": [],
      "description": "",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "setWheelCondition",
      "signature": "public void setWheelCondition\u200b(Condition wheelCondition)",
      "return_type": "",
      "modifiers": [],
      "description": "",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "setTimeout",
      "signature": "public void setTimeout\u200b(long timeout)",
      "return_type": "",
      "modifiers": [],
      "description": "",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "equals",
      "signature": "public boolean equals\u200b(java.lang.Object o)",
      "return_type": "",
      "modifiers": [],
      "description": "",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "hashCode",
      "signature": "public int hashCode()",
      "return_type": "",
      "modifiers": [],
      "description": "",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "toString",
      "signature": "public java.lang.String toString()",
      "return_type": "",
      "modifiers": [],
      "description": "",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    }
  ],
  "fields": [],
  "constructors": []
}