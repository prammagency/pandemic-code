{
  "name": "Client",
  "full_name": "org.dreambot.api.Client",
  "full_url": "https://dreambot.org/javadocs/org/dreambot/api/Client.html",
  "type": "class",
  "package": "org.dreambot.api",
  "description": "Calls a focus gained event if the client does not currently have focus This behaves as if you were to click the icon in your task bar, no separate events needed.",
  "page_structure": {
    "type": "class",
    "format_version": "old",
    "has_summary_tables": true,
    "has_detail_sections": true,
    "has_nested_classes": false
  },
  "inheritance": [],
  "interfaces_implemented": [],
  "nested_classes": [],
  "methods": [
    {
      "name": "Tile",
      "return_type": "Tile",
      "modifiers": [
        "static",
        "@Nullable"
      ],
      "description": "Gets the tile of your destination",
      "deprecated": false
    },
    {
      "name": "CollisionMap",
      "return_type": "CollisionMap[]",
      "modifiers": [
        "static",
        "@NonNull"
      ],
      "description": "Gets all collision maps",
      "deprecated": false
    },
    {
      "name": "Entity",
      "return_type": "java.util.List<Entity>",
      "modifiers": [
        "static",
        "@NonNull"
      ],
      "description": "Gets all NPCs, Players, and GameObject",
      "deprecated": false
    },
    {
      "name": "ForumUser",
      "return_type": "ForumUser",
      "modifiers": [
        "static",
        "@Nullable"
      ],
      "description": "Performs the ForumUser operation.",
      "deprecated": false
    },
    {
      "name": "FriendHandler",
      "return_type": "FriendHandler",
      "modifiers": [
        "static",
        "@NonNull"
      ],
      "description": "Deprecated. see Friends instead",
      "deprecated": false
    },
    {
      "name": "GameState",
      "return_type": "GameState",
      "modifiers": [
        "static",
        "@NonNull"
      ],
      "description": "Gets the current game state",
      "deprecated": false
    },
    {
      "name": "GraphicsObject",
      "return_type": "java.util.List<GraphicsObject>",
      "modifiers": [
        "static",
        "@NonNull"
      ],
      "description": "Deprecated. see GraphicsObjects.all()",
      "deprecated": false
    },
    {
      "name": "Instance",
      "return_type": "Instance",
      "modifiers": [
        "static",
        "@NonNull"
      ],
      "description": "Gets the bot instance",
      "deprecated": false
    },
    {
      "name": "RSLoginResponse",
      "return_type": "RSLoginResponse",
      "modifiers": [
        "static",
        "@NonNull"
      ],
      "description": "Performs the RSLoginResponse operation.",
      "deprecated": false
    },
    {
      "name": "Projectile",
      "return_type": "java.util.List<Projectile>",
      "modifiers": [
        "static",
        "@NonNull"
      ],
      "description": "Deprecated. see Projectiles.all()",
      "deprecated": false
    },
    {
      "name": "SocialHandler",
      "return_type": "SocialHandler",
      "modifiers": [
        "static",
        "@NonNull"
      ],
      "description": "Deprecated.",
      "deprecated": false
    },
    {
      "name": "Viewport",
      "return_type": "Viewport",
      "modifiers": [
        "static",
        "@NonNull"
      ],
      "description": "Returns the current viewport",
      "deprecated": false
    },
    {
      "name": "ViewportTools",
      "return_type": "ViewportTools",
      "modifiers": [
        "static",
        "@NonNull"
      ],
      "description": "Returns viewport tool.",
      "deprecated": false
    },
    {
      "name": "setForcedFPS",
      "signature": "public static void setForcedFPS\u200b(int fps)",
      "return_type": "",
      "modifiers": [],
      "description": "Sets the forcedfps.",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "isRenderingDisabled",
      "signature": "public static boolean isRenderingDisabled()",
      "return_type": "",
      "modifiers": [],
      "description": "Checks if renderingdisabled.",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "setRenderingDisabled",
      "signature": "public static void setRenderingDisabled\u200b(boolean disabled)",
      "return_type": "",
      "modifiers": [],
      "description": "Sets the renderingdisabled.",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getForumUser",
      "signature": "public static @Nullable ForumUser getForumUser()",
      "return_type": "",
      "modifiers": [],
      "description": "Gets the forumuser.",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getHost",
      "signature": "public static @NonNull java.lang.String getHost()",
      "return_type": "",
      "modifiers": [],
      "description": "Gets the host.",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getAccountStatus",
      "signature": "public static int getAccountStatus()",
      "return_type": "",
      "modifiers": [],
      "description": "Gets the accountstatus.",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getGameSocket",
      "signature": "@Deprecated public static @Nullable java.net.Socket getGameSocket()",
      "return_type": "",
      "modifiers": [],
      "description": "Gets the gamesocket.",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getCanvasImage",
      "signature": "public static @NonNull java.awt.image.BufferedImage getCanvasImage()",
      "return_type": "",
      "modifiers": [],
      "description": "Gets the canvasimage.",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "readyToLoad",
      "signature": "public static boolean readyToLoad()",
      "return_type": "",
      "modifiers": [],
      "description": "Performs the readyToLoad operation.",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getGameCycle",
      "signature": "public static int getGameCycle()",
      "return_type": "",
      "modifiers": [],
      "description": "Gets the game cycle",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getFPS",
      "signature": "public static int getFPS()",
      "return_type": "",
      "modifiers": [],
      "description": "Gets the FPS limit set by the client, or 50 FPS if it's not active",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "isCpuSaver",
      "signature": "public static boolean isCpuSaver()",
      "return_type": "",
      "modifiers": [],
      "description": "Checks if cpusaver.",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getIdleTime",
      "signature": "public static int getIdleTime()",
      "return_type": "",
      "modifiers": [],
      "description": "Gets idle time",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "setIdleTime",
      "signature": "public static void setIdleTime\u200b(int idleTime)",
      "return_type": "",
      "modifiers": [],
      "description": "Sets the idletime.",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "isLoggedIn",
      "signature": "public static boolean isLoggedIn()",
      "return_type": "",
      "modifiers": [],
      "description": "Checks if you're logged in",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getGameState",
      "signature": "public static @NonNull GameState getGameState()",
      "return_type": "",
      "modifiers": [],
      "description": "Gets the current game state",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getGameStateID",
      "signature": "public static int getGameStateID()",
      "return_type": "",
      "modifiers": [],
      "description": "Gets the current game state ID.",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getLoginIndex",
      "signature": "public static int getLoginIndex()",
      "return_type": "",
      "modifiers": [],
      "description": "Gets the login index",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getMapAngle",
      "signature": "public static int getMapAngle()",
      "return_type": "",
      "modifiers": [],
      "description": "Gets map rotation",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "setMapAngleDirect",
      "signature": "public static void setMapAngleDirect\u200b(int angle)",
      "return_type": "",
      "modifiers": [],
      "description": "Sets the mapangledirect.",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getPlane",
      "signature": "public static int getPlane()",
      "return_type": "",
      "modifiers": [],
      "description": "Gets your current plane",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getBaseY",
      "signature": "public static int getBaseY()",
      "return_type": "",
      "modifiers": [],
      "description": "Returns the region's base y",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getBaseX",
      "signature": "public static int getBaseX()",
      "return_type": "",
      "modifiers": [],
      "description": "Returns the region's base x",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getBase",
      "signature": "public static @NonNull Tile getBase()",
      "return_type": "",
      "modifiers": [],
      "description": "Returns the region's base tile (Uses getBaseX() and getBaseY()) to position tile.",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "isWorldSelectorOpen",
      "signature": "public static boolean isWorldSelectorOpen()",
      "return_type": "",
      "modifiers": [],
      "description": "Checks if the world selector is open",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "isInCutscene",
      "signature": "public static boolean isInCutscene()",
      "return_type": "",
      "modifiers": [],
      "description": "Checks if an in game cutscene is active",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getTileSettings",
      "signature": "public static byte[][][] getTileSettings()",
      "return_type": "",
      "modifiers": [],
      "description": "Gets tile settings",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getTileHeights",
      "signature": "public static int[][][] getTileHeights()",
      "return_type": "",
      "modifiers": [],
      "description": "Gets tile heights",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getCurrentWorld",
      "signature": "@Deprecated public static int getCurrentWorld()",
      "return_type": "",
      "modifiers": [],
      "description": "Gets the currentworld.",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getMessageContainers",
      "signature": "public static @NonNull java.util.List<org.dreambot.api.wrappers.cache.MessageContainer> getMessageContainers()",
      "return_type": "",
      "modifiers": [],
      "description": "Returns all message containers",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getProjectiles",
      "signature": "@Deprecated public static @NonNull java.util.List<Projectile> getProjectiles()",
      "return_type": "",
      "modifiers": [],
      "description": "Gets the projectiles.",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getGraphicsObjects",
      "signature": "@Deprecated public static @NonNull java.util.List<GraphicsObject> getGraphicsObjects()",
      "return_type": "",
      "modifiers": [],
      "description": "Gets the graphicsobjects.",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getPassword",
      "signature": "public static @Nullable java.lang.String getPassword()",
      "return_type": "",
      "modifiers": [],
      "description": "Returns the player's password",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getMyPlayerIndex",
      "signature": "public static int getMyPlayerIndex()",
      "return_type": "",
      "modifiers": [],
      "description": "Gets your local player's index",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getCanvas",
      "signature": "public static @NonNull java.awt.Canvas getCanvas()",
      "return_type": "",
      "modifiers": [],
      "description": "Gets the RS canvas",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getCollisionMaps",
      "signature": "public static @NonNull CollisionMap[] getCollisionMaps()",
      "return_type": "",
      "modifiers": [],
      "description": "Gets all collision maps",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getSocialHandler",
      "signature": "@Deprecated public static @NonNull SocialHandler getSocialHandler()",
      "return_type": "",
      "modifiers": [],
      "description": "See respective actual handler instead Friends or ClanChat",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getFriendHandler",
      "signature": "@Deprecated public static @NonNull FriendHandler getFriendHandler()",
      "return_type": "",
      "modifiers": [],
      "description": "Gets the friendhandler.",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getUsername",
      "signature": "public static @Nullable java.lang.String getUsername()",
      "return_type": "",
      "modifiers": [],
      "description": "Gets the username or email that was entered at the login screen",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getEntities",
      "signature": "public static @NonNull java.util.List<Entity> getEntities()",
      "return_type": "",
      "modifiers": [],
      "description": "Gets all NPCs, Players, and GameObject",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getInstance",
      "signature": "public static @NonNull Instance getInstance()",
      "return_type": "",
      "modifiers": [],
      "description": "Gets the bot instance",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getViewport",
      "signature": "public static @NonNull Viewport getViewport()",
      "return_type": "",
      "modifiers": [],
      "description": "Returns the current viewport",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "setViewport",
      "signature": "public static void setViewport\u200b(@NonNull Viewport viewport)",
      "return_type": "",
      "modifiers": [],
      "description": "Sets the viewport",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getViewportWidth",
      "signature": "public static int getViewportWidth()",
      "return_type": "",
      "modifiers": [],
      "description": "Gets the viewportwidth.",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getViewportHeight",
      "signature": "public static int getViewportHeight()",
      "return_type": "",
      "modifiers": [],
      "description": "Gets the viewportheight.",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getViewportTools",
      "signature": "public static @NonNull ViewportTools getViewportTools()",
      "return_type": "",
      "modifiers": [],
      "description": "Returns viewport tool.",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getDestX",
      "signature": "public static int getDestX()",
      "return_type": "",
      "modifiers": [],
      "description": "Gets the destination X",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getDestY",
      "signature": "public static int getDestY()",
      "return_type": "",
      "modifiers": [],
      "description": "Gets the destination Y",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getDestination",
      "signature": "public static @Nullable Tile getDestination()",
      "return_type": "",
      "modifiers": [],
      "description": "Gets the tile of your destination",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "isCameraInMotion",
      "signature": "public static boolean isCameraInMotion()",
      "return_type": "",
      "modifiers": [],
      "description": "Checks if the camera is in motion",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "setCameraInMotion",
      "signature": "public static void setCameraInMotion\u200b(boolean cameraInMotion)",
      "return_type": "",
      "modifiers": [],
      "description": "Sets the camera in motion",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "seededRandom",
      "signature": "public static double seededRandom()",
      "return_type": "",
      "modifiers": [],
      "description": "Returns a random number seeded by account name between .9 and 1.1",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getMessage0",
      "signature": "public static @Nullable java.lang.String getMessage0()",
      "return_type": "",
      "modifiers": [],
      "description": "Gets the message0.",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getMessage1",
      "signature": "public static @Nullable java.lang.String getMessage1()",
      "return_type": "",
      "modifiers": [],
      "description": "Gets the message1.",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getMessage2",
      "signature": "public static @Nullable java.lang.String getMessage2()",
      "return_type": "",
      "modifiers": [],
      "description": "Gets the message2.",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getLoginResponse",
      "signature": "public static @NonNull RSLoginResponse getLoginResponse()",
      "return_type": "",
      "modifiers": [],
      "description": "Gets the loginresponse.",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getMembershipLeft",
      "signature": "public static int getMembershipLeft()",
      "return_type": "",
      "modifiers": [],
      "description": "Gets the membershipleft.",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "isMembers",
      "signature": "public static boolean isMembers()",
      "return_type": "",
      "modifiers": [],
      "description": "Checks if members.",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "isIronman",
      "signature": "public static boolean isIronman()",
      "return_type": "",
      "modifiers": [],
      "description": "Checks if the current character is any non-group ironman",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "isGroupIronman",
      "signature": "public static boolean isGroupIronman()",
      "return_type": "",
      "modifiers": [],
      "description": "Checks if the current character is a group ironman",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "isUltimateIronman",
      "signature": "public static boolean isUltimateIronman()",
      "return_type": "",
      "modifiers": [],
      "description": "Checks if the current character is an ultimate ironman",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "hasMembersAccess",
      "signature": "public static boolean hasMembersAccess()",
      "return_type": "",
      "modifiers": [],
      "description": "Checks if you currently have access to members features in OSRS",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "isDynamicRegion",
      "signature": "public static boolean isDynamicRegion()",
      "return_type": "",
      "modifiers": [],
      "description": "Shows if you are in a dynamic/instanced region",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "fireScriptEvent",
      "signature": "public static boolean fireScriptEvent\u200b(@NonNull RuneScriptEvent event)",
      "return_type": "",
      "modifiers": [],
      "description": "Performs the fireScriptEvent operation.",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "ignoreScriptId",
      "signature": "public static void ignoreScriptId\u200b(int id)",
      "return_type": "",
      "modifiers": [],
      "description": "Performs the ignoreScriptId operation.",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "removeIgnoreScriptId",
      "signature": "public static void removeIgnoreScriptId\u200b(int id)",
      "return_type": "",
      "modifiers": [],
      "description": "Performs the removeIgnoreScriptId operation.",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getRunescapeFps",
      "signature": "public static int getRunescapeFps()",
      "return_type": "",
      "modifiers": [],
      "description": "Gets the runescapefps.",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "hasFocus",
      "signature": "public static boolean hasFocus()",
      "return_type": "",
      "modifiers": [],
      "description": "Returns if the RS client currently has focus",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "gainFocus",
      "signature": "public static void gainFocus()",
      "return_type": "",
      "modifiers": [],
      "description": "Calls a focus gained event if the client does not currently have focus This behaves as if you were to click the icon in your task bar, no separate events needed. For mouse to gain focus you need mouse events For keyboard to gain focus (alt+tab) sends a tab released event after gaining focus",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "loseFocus",
      "signature": "public static void loseFocus()",
      "return_type": "",
      "modifiers": [],
      "description": "Sends a focus lost event if the client currently has focus This sends no other events, losing focus by mouse would suggest moving mouse off canvas and then losing focus Losing focus by keyboard would expect the alt key to be pressed at least (for alt+tab)",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getGameTick",
      "signature": "public static int getGameTick()",
      "return_type": "",
      "modifiers": [],
      "description": "Gets the current game tick, which increases roughly every 600ms",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    },
    {
      "name": "getForcedFPS",
      "signature": "public static int getForcedFPS()",
      "return_type": "",
      "modifiers": [],
      "description": "Gets the forcedfps.",
      "parameters": [],
      "return": {
        "type": "",
        "description": ""
      },
      "deprecated": false
    }
  ],
  "fields": [],
  "constructors": []
}