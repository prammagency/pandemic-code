{
  "category": "variables/",
  "content": [
    "Variables | \nScripts\nDocs\nActions\nPurchase PSC\nDiscord\nCustom Actions\nScript\nLogic\nLoops\nVariables\nIf variable is set\nIf variable is not set\nIf variable matches\nIf variable doesn't match\nIf variable has changed\nIf value matches\nIf value doesn't match\nLists\nLoad Variables from JSON\nExtract from existing variable\nMaps\nDelete variable\nSet Variable To\nDelete multiple variables\nDelete all variables\nDelete all variables except\nAdd to variable by\nSubtract from variable by\nMultiply variable by\nDivide variable by\nEntities\nWalking\nInventory\nBank\nSleep\nPaint\nAccounts\nBond\nCamera\nClan Chat\nClient\nConfig\nDebug\nDeposit Box\nDialogue\nDiscord\nEmote\nEquipment\nFiles\nFriends\nGame Settings\nGrand Exchange\nHint Arrow\nItem Processing\nKeyboard\nMagic\nMouse\nMultithreading\nPrayer\nQuests\nShop\nSkill Tracker\nSockets\nTabs\nText\nTimer\nTrade\nWidget\nWorld\nVariables\nVariables\nAvailable subcategories in this category:\nLists\nMaps\nSet Variable To\nAvailable actions in this category:\nIf variable is set\nIf variable is not set\nIf variable matches\nIf variable doesn't match\nIf variable has changed\nIf value matches\nIf value doesn't match\nLoad Variables from JSON\nExtract from existing variable\nDelete variable\nDelete multiple variables\nDelete all variables\nDelete all variables except\nAdd to variable by\nSubtract from variable by\nMultiply variable by\nDivide variable by\nPrevious\nBreak out of loop\nNext\nIf variable is set\nScript Network\nScripts\nDocs\nGetting Started\nTutorials\nAction Reference",
    "Variables | \nScripts\nDocs\nActions\nPurchase PSC\nDiscord\nGetting Started\nFrequently Asked Questions\nTutorials\nGuides\nEditor\nScripts\nVariables\nLists\nMaps\nActions\nField Commands\nCustom Actions\nIn Editor Action Search\nVariable Panel\nAreas\nAction Recorder\nReleasing Scripts on the SDN\nAction Reference\nGuides\nVariables\nOn this page\nVariables\nVariables are an extremely useful tool which you can use to both store and read values using just a name.\nFor example, if you wanted to count how many times you've done something, you could use a variable and call it \"Count\" (or anything you want) and add to it.\nThen later if you wanted to print out how many times you did that thing, you could retrieve that value in many different ways using \nOne of the easiest ways to use your stored variables would be the\nField Command\nvar(Variable Name)\n.\nExample Script\n\u00e2\u20ac\u2039\nTake a look at this example script below, which:\nSets a variable called \"Count\" to 10\nThen loops (runs all the inner actions of the looping action) until our variable \"Count\" becomes 0\nInside the loop, we are subtracting our \"Count\" variable by 1, meaning it will call the\nSubtract action\na total of 10 times\nOnce it has finished looping (meaning \"Count\" is now 0), we simply log that to the console\nLast Action's Output\n\u00e2\u20ac\u2039\nMany actions in PSC will have output, such as\nIf ammo count is\nor\nWithdraw all of the first matched item\nas shown in the\nOutput\nsection.\nYou can use this output by either using the\nlastOutput()\nField Command\nor the\nSet Variable To > Last action's output\naction to store it in a variable.\ntip\nWith certain actions with an object as output (entities like Players, NPCs, Ground Items, and Game Objects) the last output will actually be that entity. You can use these to do many different things, such as using the \"Is variable value\" filter to interact with that specific entity at a later time.\nPrevious\nScripts\nNext\nLists\nExample Script\nLast Action's Output\nScript Network\nScripts\nDocs\nGetting Started\nTutorials\nAction Reference",
    "Variables | \nScripts\nDocs\nActions\nPurchase PSC\nDiscord\nGetting Started\nFrequently Asked Questions\nTutorials\nGuides\nEditor\nScripts\nVariables\nLists\nMaps\nActions\nField Commands\nCustom Actions\nIn Editor Action Search\nVariable Panel\nAreas\nAction Recorder\nReleasing Scripts on the SDN\nAction Reference\nGuides\nVariables\nOn this page\nVariables\nVariables are an extremely useful tool which you can use to both store and read values using just a name.\nFor example, if you wanted to count how many times you've done something, you could use a variable and call it \"Count\" (or anything you want) and add to it.\nThen later if you wanted to print out how many times you did that thing, you could retrieve that value in many different ways using \nOne of the easiest ways to use your stored variables would be the\nField Command\nvar(Variable Name)\n.\nExample Script\n\u00e2\u20ac\u2039\nTake a look at this example script below, which:\nSets a variable called \"Count\" to 10\nThen loops (runs all the inner actions of the looping action) until our variable \"Count\" becomes 0\nInside the loop, we are subtracting our \"Count\" variable by 1, meaning it will call the\nSubtract action\na total of 10 times\nOnce it has finished looping (meaning \"Count\" is now 0), we simply log that to the console\nLast Action's Output\n\u00e2\u20ac\u2039\nMany actions in PSC will have output, such as\nIf ammo count is\nor\nWithdraw all of the first matched item\nas shown in the\nOutput\nsection.\nYou can use this output by either using the\nlastOutput()\nField Command\nor the\nSet Variable To > Last action's output\naction to store it in a variable.\ntip\nWith certain actions with an object as output (entities like Players, NPCs, Ground Items, and Game Objects) the last output will actually be that entity. You can use these to do many different things, such as using the \"Is variable value\" filter to interact with that specific entity at a later time.\nPrevious\nScripts\nNext\nLists\nExample Script\nLast Action's Output\nScript Network\nScripts\nDocs\nGetting Started\nTutorials\nAction Reference",
    "Variables | \nScripts\nDocs\nActions\nPurchase PSC\nDiscord\nGetting Started\nFrequently Asked Questions\nTutorials\nGuides\nEditor\nScripts\nVariables\nLists\nMaps\nActions\nField Commands\nCustom Actions\nIn Editor Action Search\nVariable Panel\nAreas\nAction Recorder\nReleasing Scripts on the SDN\nAction Reference\nGuides\nVariables\nOn this page\nVariables\nVariables are an extremely useful tool which you can use to both store and read values using just a name.\nFor example, if you wanted to count how many times you've done something, you could use a variable and call it \"Count\" (or anything you want) and add to it.\nThen later if you wanted to print out how many times you did that thing, you could retrieve that value in many different ways using \nOne of the easiest ways to use your stored variables would be the\nField Command\nvar(Variable Name)\n.\nExample Script\n\u00e2\u20ac\u2039\nTake a look at this example script below, which:\nSets a variable called \"Count\" to 10\nThen loops (runs all the inner actions of the looping action) until our variable \"Count\" becomes 0\nInside the loop, we are subtracting our \"Count\" variable by 1, meaning it will call the\nSubtract action\na total of 10 times\nOnce it has finished looping (meaning \"Count\" is now 0), we simply log that to the console\nLast Action's Output\n\u00e2\u20ac\u2039\nMany actions in PSC will have output, such as\nIf ammo count is\nor\nWithdraw all of the first matched item\nas shown in the\nOutput\nsection.\nYou can use this output by either using the\nlastOutput()\nField Command\nor the\nSet Variable To > Last action's output\naction to store it in a variable.\ntip\nWith certain actions with an object as output (entities like Players, NPCs, Ground Items, and Game Objects) the last output will actually be that entity. You can use these to do many different things, such as using the \"Is variable value\" filter to interact with that specific entity at a later time.\nPrevious\nScripts\nNext\nLists\nExample Script\nLast Action's Output\nScript Network\nScripts\nDocs\nGetting Started\nTutorials\nAction Reference",
    "Variables | \nScripts\nDocs\nActions\nPurchase PSC\nDiscord\nGetting Started\nFrequently Asked Questions\nTutorials\nGuides\nEditor\nScripts\nVariables\nLists\nMaps\nActions\nField Commands\nCustom Actions\nIn Editor Action Search\nVariable Panel\nAreas\nAction Recorder\nReleasing Scripts on the SDN\nAction Reference\nGuides\nVariables\nOn this page\nVariables\nVariables are an extremely useful tool which you can use to both store and read values using just a name.\nFor example, if you wanted to count how many times you've done something, you could use a variable and call it \"Count\" (or anything you want) and add to it.\nThen later if you wanted to print out how many times you did that thing, you could retrieve that value in many different ways using \nOne of the easiest ways to use your stored variables would be the\nField Command\nvar(Variable Name)\n.\nExample Script\n\u00e2\u20ac\u2039\nTake a look at this example script below, which:\nSets a variable called \"Count\" to 10\nThen loops (runs all the inner actions of the looping action) until our variable \"Count\" becomes 0\nInside the loop, we are subtracting our \"Count\" variable by 1, meaning it will call the\nSubtract action\na total of 10 times\nOnce it has finished looping (meaning \"Count\" is now 0), we simply log that to the console\nLast Action's Output\n\u00e2\u20ac\u2039\nMany actions in PSC will have output, such as\nIf ammo count is\nor\nWithdraw all of the first matched item\nas shown in the\nOutput\nsection.\nYou can use this output by either using the\nlastOutput()\nField Command\nor the\nSet Variable To > Last action's output\naction to store it in a variable.\ntip\nWith certain actions with an object as output (entities like Players, NPCs, Ground Items, and Game Objects) the last output will actually be that entity. You can use these to do many different things, such as using the \"Is variable value\" filter to interact with that specific entity at a later time.\nPrevious\nScripts\nNext\nLists\nExample Script\nLast Action's Output\nScript Network\nScripts\nDocs\nGetting Started\nTutorials\nAction Reference",
    "Variables | \nScripts\nDocs\nActions\nPurchase PSC\nDiscord\nCustom Actions\nScript\nLogic\nLoops\nVariables\nIf variable is set\nIf variable is not set\nIf variable matches\nIf variable doesn't match\nIf variable has changed\nIf value matches\nIf value doesn't match\nLists\nLoad Variables from JSON\nExtract from existing variable\nMaps\nDelete variable\nSet Variable To\nDelete multiple variables\nDelete all variables\nDelete all variables except\nAdd to variable by\nSubtract from variable by\nMultiply variable by\nDivide variable by\nEntities\nWalking\nInventory\nBank\nSleep\nPaint\nAccounts\nBond\nCamera\nClan Chat\nClient\nConfig\nDebug\nDeposit Box\nDialogue\nDiscord\nEmote\nEquipment\nFiles\nFriends\nGame Settings\nGrand Exchange\nHint Arrow\nItem Processing\nKeyboard\nMagic\nMouse\nMultithreading\nPrayer\nQuests\nShop\nSkill Tracker\nSockets\nTabs\nText\nTimer\nTrade\nWidget\nWorld\nVariables\nVariables\nAvailable subcategories in this category:\nLists\nMaps\nSet Variable To\nAvailable actions in this category:\nIf variable is set\nIf variable is not set\nIf variable matches\nIf variable doesn't match\nIf variable has changed\nIf value matches\nIf value doesn't match\nLoad Variables from JSON\nExtract from existing variable\nDelete variable\nDelete multiple variables\nDelete all variables\nDelete all variables except\nAdd to variable by\nSubtract from variable by\nMultiply variable by\nDivide variable by\nPrevious\nBreak out of loop\nNext\nIf variable is set\nScript Network\nScripts\nDocs\nGetting Started\nTutorials\nAction Reference"
  ]
}