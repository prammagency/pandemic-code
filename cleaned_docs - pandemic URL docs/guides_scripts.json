{
  "category": "guides/scripts",
  "content": [
    "Scripts | \nScripts\nDocs\nActions\nPurchase PSC\nDiscord\nGetting Started\nFrequently Asked Questions\nTutorials\nGuides\nEditor\nScripts\nVariables\nActions\nField Commands\nCustom Actions\nIn Editor Action Search\nVariable Panel\nAreas\nAction Recorder\nReleasing Scripts on the SDN\nAction Reference\nGuides\nScripts\nOn this page\nScripts\nScripts in \nActions\nthat will run in a loop until it's stopped.\nHow Scripts Work\n\u00e2\u20ac\u2039\nScripts run by executing actions from the top to bottom then resets and starts again at the top until the script is stopped.\nActions will only run if its parent action succeeded, giving you the power of performing actions only when you want them to run.\nTake a look at this example script to better understand what that means:\nAs you can see above:\nOur\nIf real skill level is\naction fails because the character's Agility level isn't high enough\nSince that action failed, the inner (or children) actions are skipped\nFinally, we execute a simple\nLog\naction\nAfter all of that, it will start back at the top of the script and repeat forever (or until the script is stopped).\nBest Practices\n\u00e2\u20ac\u2039\nEmbrace the Loop\n\u00e2\u20ac\u2039\nMany users new to scripting try to make their scripts fully run in a single script loop, and are usually surprised when it doesn't work out too well.\nDoing that will often result in rigid, error-prone scripts that can't recover from the slightest disruption.\nYou want to structure your script so it can loop as often as possible and can be started from any point in your script.\nAvoid Long Sleeps\n\u00e2\u20ac\u2039\nThis is related to the previous Best Practice, but is still important to point out separately.\nYou should use actions like\nSleep while animating\n,\nSleep while in combat\n, and\nSleep while moving\nsparingly, as they take script control from you until they're finished.\nA better alternative is to only perform the previous action\nif\nyou're not animating/sleeping/moving, that way your script is still looping often and you can do other actions as needed (eat food, pray, etc.)\nExample of what not to do\n\u00e2\u20ac\u2039\nTake a look at this script that's doing it the\nwrong\nway:\nIf we attack the Guard successfully, it'll sleep until either we're dead or the Guard's dead, and our script won't run any other actions until that happens.\nWe can easily improve this by simply reversing the order:\nWith this simple change our script will now have full control the entire time we're fighting.\nPrevious\nEditor\nNext\nVariables\nHow Scripts Work\nBest Practices\nEmbrace the Loop\nAvoid Long Sleeps\nScript Network\nScripts\nDocs\nGetting Started\nTutorials\nAction Reference",
    "Scripts | \nScripts\nDocs\nActions\nPurchase PSC\nDiscord\nGetting Started\nFrequently Asked Questions\nTutorials\nGuides\nEditor\nScripts\nVariables\nActions\nField Commands\nCustom Actions\nIn Editor Action Search\nVariable Panel\nAreas\nAction Recorder\nReleasing Scripts on the SDN\nAction Reference\nGuides\nScripts\nOn this page\nScripts\nScripts in \nActions\nthat will run in a loop until it's stopped.\nHow Scripts Work\n\u00e2\u20ac\u2039\nScripts run by executing actions from the top to bottom then resets and starts again at the top until the script is stopped.\nActions will only run if its parent action succeeded, giving you the power of performing actions only when you want them to run.\nTake a look at this example script to better understand what that means:\nAs you can see above:\nOur\nIf real skill level is\naction fails because the character's Agility level isn't high enough\nSince that action failed, the inner (or children) actions are skipped\nFinally, we execute a simple\nLog\naction\nAfter all of that, it will start back at the top of the script and repeat forever (or until the script is stopped).\nBest Practices\n\u00e2\u20ac\u2039\nEmbrace the Loop\n\u00e2\u20ac\u2039\nMany users new to scripting try to make their scripts fully run in a single script loop, and are usually surprised when it doesn't work out too well.\nDoing that will often result in rigid, error-prone scripts that can't recover from the slightest disruption.\nYou want to structure your script so it can loop as often as possible and can be started from any point in your script.\nAvoid Long Sleeps\n\u00e2\u20ac\u2039\nThis is related to the previous Best Practice, but is still important to point out separately.\nYou should use actions like\nSleep while animating\n,\nSleep while in combat\n, and\nSleep while moving\nsparingly, as they take script control from you until they're finished.\nA better alternative is to only perform the previous action\nif\nyou're not animating/sleeping/moving, that way your script is still looping often and you can do other actions as needed (eat food, pray, etc.)\nExample of what not to do\n\u00e2\u20ac\u2039\nTake a look at this script that's doing it the\nwrong\nway:\nIf we attack the Guard successfully, it'll sleep until either we're dead or the Guard's dead, and our script won't run any other actions until that happens.\nWe can easily improve this by simply reversing the order:\nWith this simple change our script will now have full control the entire time we're fighting.\nPrevious\nEditor\nNext\nVariables\nHow Scripts Work\nBest Practices\nEmbrace the Loop\nAvoid Long Sleeps\nScript Network\nScripts\nDocs\nGetting Started\nTutorials\nAction Reference",
    "Scripts | \nScripts\nDocs\nActions\nPurchase PSC\nDiscord\nGetting Started\nFrequently Asked Questions\nTutorials\nGuides\nEditor\nScripts\nVariables\nActions\nField Commands\nCustom Actions\nIn Editor Action Search\nVariable Panel\nAreas\nAction Recorder\nReleasing Scripts on the SDN\nAction Reference\nGuides\nScripts\nOn this page\nScripts\nScripts in \nActions\nthat will run in a loop until it's stopped.\nHow Scripts Work\n\u00e2\u20ac\u2039\nScripts run by executing actions from the top to bottom then resets and starts again at the top until the script is stopped.\nActions will only run if its parent action succeeded, giving you the power of performing actions only when you want them to run.\nTake a look at this example script to better understand what that means:\nAs you can see above:\nOur\nIf real skill level is\naction fails because the character's Agility level isn't high enough\nSince that action failed, the inner (or children) actions are skipped\nFinally, we execute a simple\nLog\naction\nAfter all of that, it will start back at the top of the script and repeat forever (or until the script is stopped).\nBest Practices\n\u00e2\u20ac\u2039\nEmbrace the Loop\n\u00e2\u20ac\u2039\nMany users new to scripting try to make their scripts fully run in a single script loop, and are usually surprised when it doesn't work out too well.\nDoing that will often result in rigid, error-prone scripts that can't recover from the slightest disruption.\nYou want to structure your script so it can loop as often as possible and can be started from any point in your script.\nAvoid Long Sleeps\n\u00e2\u20ac\u2039\nThis is related to the previous Best Practice, but is still important to point out separately.\nYou should use actions like\nSleep while animating\n,\nSleep while in combat\n, and\nSleep while moving\nsparingly, as they take script control from you until they're finished.\nA better alternative is to only perform the previous action\nif\nyou're not animating/sleeping/moving, that way your script is still looping often and you can do other actions as needed (eat food, pray, etc.)\nExample of what not to do\n\u00e2\u20ac\u2039\nTake a look at this script that's doing it the\nwrong\nway:\nIf we attack the Guard successfully, it'll sleep until either we're dead or the Guard's dead, and our script won't run any other actions until that happens.\nWe can easily improve this by simply reversing the order:\nWith this simple change our script will now have full control the entire time we're fighting.\nPrevious\nEditor\nNext\nVariables\nHow Scripts Work\nBest Practices\nEmbrace the Loop\nAvoid Long Sleeps\nScript Network\nScripts\nDocs\nGetting Started\nTutorials\nAction Reference",
    "Scripts | \nScripts\nDocs\nActions\nPurchase PSC\nDiscord\nGetting Started\nFrequently Asked Questions\nTutorials\nGuides\nEditor\nScripts\nVariables\nActions\nField Commands\nCustom Actions\nIn Editor Action Search\nVariable Panel\nAreas\nAction Recorder\nReleasing Scripts on the SDN\nAction Reference\nGuides\nScripts\nOn this page\nScripts\nScripts in \nActions\nthat will run in a loop until it's stopped.\nHow Scripts Work\n\u00e2\u20ac\u2039\nScripts run by executing actions from the top to bottom then resets and starts again at the top until the script is stopped.\nActions will only run if its parent action succeeded, giving you the power of performing actions only when you want them to run.\nTake a look at this example script to better understand what that means:\nAs you can see above:\nOur\nIf real skill level is\naction fails because the character's Agility level isn't high enough\nSince that action failed, the inner (or children) actions are skipped\nFinally, we execute a simple\nLog\naction\nAfter all of that, it will start back at the top of the script and repeat forever (or until the script is stopped).\nBest Practices\n\u00e2\u20ac\u2039\nEmbrace the Loop\n\u00e2\u20ac\u2039\nMany users new to scripting try to make their scripts fully run in a single script loop, and are usually surprised when it doesn't work out too well.\nDoing that will often result in rigid, error-prone scripts that can't recover from the slightest disruption.\nYou want to structure your script so it can loop as often as possible and can be started from any point in your script.\nAvoid Long Sleeps\n\u00e2\u20ac\u2039\nThis is related to the previous Best Practice, but is still important to point out separately.\nYou should use actions like\nSleep while animating\n,\nSleep while in combat\n, and\nSleep while moving\nsparingly, as they take script control from you until they're finished.\nA better alternative is to only perform the previous action\nif\nyou're not animating/sleeping/moving, that way your script is still looping often and you can do other actions as needed (eat food, pray, etc.)\nExample of what not to do\n\u00e2\u20ac\u2039\nTake a look at this script that's doing it the\nwrong\nway:\nIf we attack the Guard successfully, it'll sleep until either we're dead or the Guard's dead, and our script won't run any other actions until that happens.\nWe can easily improve this by simply reversing the order:\nWith this simple change our script will now have full control the entire time we're fighting.\nPrevious\nEditor\nNext\nVariables\nHow Scripts Work\nBest Practices\nEmbrace the Loop\nAvoid Long Sleeps\nScript Network\nScripts\nDocs\nGetting Started\nTutorials\nAction Reference",
    "Scripts | \nScripts\nDocs\nActions\nPurchase PSC\nDiscord\nGetting Started\nFrequently Asked Questions\nTutorials\nGuides\nEditor\nScripts\nVariables\nActions\nField Commands\nCustom Actions\nIn Editor Action Search\nVariable Panel\nAreas\nAction Recorder\nReleasing Scripts on the SDN\nAction Reference\nGuides\nScripts\nOn this page\nScripts\nScripts in \nActions\nthat will run in a loop until it's stopped.\nHow Scripts Work\n\u00e2\u20ac\u2039\nScripts run by executing actions from the top to bottom then resets and starts again at the top until the script is stopped.\nActions will only run if its parent action succeeded, giving you the power of performing actions only when you want them to run.\nTake a look at this example script to better understand what that means:\nAs you can see above:\nOur\nIf real skill level is\naction fails because the character's Agility level isn't high enough\nSince that action failed, the inner (or children) actions are skipped\nFinally, we execute a simple\nLog\naction\nAfter all of that, it will start back at the top of the script and repeat forever (or until the script is stopped).\nBest Practices\n\u00e2\u20ac\u2039\nEmbrace the Loop\n\u00e2\u20ac\u2039\nMany users new to scripting try to make their scripts fully run in a single script loop, and are usually surprised when it doesn't work out too well.\nDoing that will often result in rigid, error-prone scripts that can't recover from the slightest disruption.\nYou want to structure your script so it can loop as often as possible and can be started from any point in your script.\nAvoid Long Sleeps\n\u00e2\u20ac\u2039\nThis is related to the previous Best Practice, but is still important to point out separately.\nYou should use actions like\nSleep while animating\n,\nSleep while in combat\n, and\nSleep while moving\nsparingly, as they take script control from you until they're finished.\nA better alternative is to only perform the previous action\nif\nyou're not animating/sleeping/moving, that way your script is still looping often and you can do other actions as needed (eat food, pray, etc.)\nExample of what not to do\n\u00e2\u20ac\u2039\nTake a look at this script that's doing it the\nwrong\nway:\nIf we attack the Guard successfully, it'll sleep until either we're dead or the Guard's dead, and our script won't run any other actions until that happens.\nWe can easily improve this by simply reversing the order:\nWith this simple change our script will now have full control the entire time we're fighting.\nPrevious\nEditor\nNext\nVariables\nHow Scripts Work\nBest Practices\nEmbrace the Loop\nAvoid Long Sleeps\nScript Network\nScripts\nDocs\nGetting Started\nTutorials\nAction Reference",
    "Scripts | \nScripts\nDocs\nActions\nPurchase PSC\nDiscord\nGetting Started\nFrequently Asked Questions\nTutorials\nGuides\nEditor\nScripts\nVariables\nActions\nField Commands\nCustom Actions\nIn Editor Action Search\nVariable Panel\nAreas\nAction Recorder\nReleasing Scripts on the SDN\nAction Reference\nGuides\nScripts\nOn this page\nScripts\nScripts in \nActions\nthat will run in a loop until it's stopped.\nHow Scripts Work\n\u00e2\u20ac\u2039\nScripts run by executing actions from the top to bottom then resets and starts again at the top until the script is stopped.\nActions will only run if its parent action succeeded, giving you the power of performing actions only when you want them to run.\nTake a look at this example script to better understand what that means:\nAs you can see above:\nOur\nIf real skill level is\naction fails because the character's Agility level isn't high enough\nSince that action failed, the inner (or children) actions are skipped\nFinally, we execute a simple\nLog\naction\nAfter all of that, it will start back at the top of the script and repeat forever (or until the script is stopped).\nBest Practices\n\u00e2\u20ac\u2039\nEmbrace the Loop\n\u00e2\u20ac\u2039\nMany users new to scripting try to make their scripts fully run in a single script loop, and are usually surprised when it doesn't work out too well.\nDoing that will often result in rigid, error-prone scripts that can't recover from the slightest disruption.\nYou want to structure your script so it can loop as often as possible and can be started from any point in your script.\nAvoid Long Sleeps\n\u00e2\u20ac\u2039\nThis is related to the previous Best Practice, but is still important to point out separately.\nYou should use actions like\nSleep while animating\n,\nSleep while in combat\n, and\nSleep while moving\nsparingly, as they take script control from you until they're finished.\nA better alternative is to only perform the previous action\nif\nyou're not animating/sleeping/moving, that way your script is still looping often and you can do other actions as needed (eat food, pray, etc.)\nExample of what not to do\n\u00e2\u20ac\u2039\nTake a look at this script that's doing it the\nwrong\nway:\nIf we attack the Guard successfully, it'll sleep until either we're dead or the Guard's dead, and our script won't run any other actions until that happens.\nWe can easily improve this by simply reversing the order:\nWith this simple change our script will now have full control the entire time we're fighting.\nPrevious\nEditor\nNext\nVariables\nHow Scripts Work\nBest Practices\nEmbrace the Loop\nAvoid Long Sleeps\nScript Network\nScripts\nDocs\nGetting Started\nTutorials\nAction Reference",
    "Scripts | \nScripts\nDocs\nActions\nPurchase PSC\nDiscord\nGetting Started\nFrequently Asked Questions\nTutorials\nGuides\nEditor\nScripts\nVariables\nActions\nField Commands\nCustom Actions\nIn Editor Action Search\nVariable Panel\nAreas\nAction Recorder\nReleasing Scripts on the SDN\nAction Reference\nGuides\nScripts\nOn this page\nScripts\nScripts in \nActions\nthat will run in a loop until it's stopped.\nHow Scripts Work\n\u00e2\u20ac\u2039\nScripts run by executing actions from the top to bottom then resets and starts again at the top until the script is stopped.\nActions will only run if its parent action succeeded, giving you the power of performing actions only when you want them to run.\nTake a look at this example script to better understand what that means:\nAs you can see above:\nOur\nIf real skill level is\naction fails because the character's Agility level isn't high enough\nSince that action failed, the inner (or children) actions are skipped\nFinally, we execute a simple\nLog\naction\nAfter all of that, it will start back at the top of the script and repeat forever (or until the script is stopped).\nBest Practices\n\u00e2\u20ac\u2039\nEmbrace the Loop\n\u00e2\u20ac\u2039\nMany users new to scripting try to make their scripts fully run in a single script loop, and are usually surprised when it doesn't work out too well.\nDoing that will often result in rigid, error-prone scripts that can't recover from the slightest disruption.\nYou want to structure your script so it can loop as often as possible and can be started from any point in your script.\nAvoid Long Sleeps\n\u00e2\u20ac\u2039\nThis is related to the previous Best Practice, but is still important to point out separately.\nYou should use actions like\nSleep while animating\n,\nSleep while in combat\n, and\nSleep while moving\nsparingly, as they take script control from you until they're finished.\nA better alternative is to only perform the previous action\nif\nyou're not animating/sleeping/moving, that way your script is still looping often and you can do other actions as needed (eat food, pray, etc.)\nExample of what not to do\n\u00e2\u20ac\u2039\nTake a look at this script that's doing it the\nwrong\nway:\nIf we attack the Guard successfully, it'll sleep until either we're dead or the Guard's dead, and our script won't run any other actions until that happens.\nWe can easily improve this by simply reversing the order:\nWith this simple change our script will now have full control the entire time we're fighting.\nPrevious\nEditor\nNext\nVariables\nHow Scripts Work\nBest Practices\nEmbrace the Loop\nAvoid Long Sleeps\nScript Network\nScripts\nDocs\nGetting Started\nTutorials\nAction Reference"
  ]
}